import{p as v,_ as p,c as u,o as l,i as _,r as a,W as q,K as J,X as ee,k as te,C as ne,a as t,f as L,l as g,t as W,e as y,n as z,F as K,g as ae,R as se,S as ie,m as N}from"./BkFfgarm.js";const re=v("/icons/IconTerminal.png"),le=v("/icons/windowmin.png"),R=v("/icons/windowmax.png"),U=v("/icons/xmark.png"),oe=v("/Videos/BaddiscoDemoThumbnail.jpg"),de=v("/Videos/BaddiscoDemo.mp4"),ue={},ce={class:"max-w-3xl mx-auto px-4 py-8 text-gray-800"};function me(f,o){return l(),u("section",ce,o[0]||(o[0]=[_('<h1 class="text-4xl font-bold mb-6">BadDisco – Smartes Licht fürs stille Örtchen</h1><p class="mb-6"><strong>BadDisco</strong> ist ein Smarthome-Projekt mit einem Augenzwinkern: Es verbindet simple Technik mit durchdachter Automatisierung und sorgt dafür, dass selbst das Badezimmer Teil der Atmosphäre wird. Was als Party-Gag begann, hat sich zu einem festen Bestandteil meines Alltags entwickelt – zuverlässig, dezent steuerbar und immer mit einer Prise Humor. </p><h2 class="text-2xl font-semibold mt-8 mb-4">Die Idee</h2><p class="mb-6"> Die ursprüngliche Motivation:<br><em>„Wenn sich jemand ins Bad setzt – soll’s nicht langweilig werden.“</em><br> Technisch umgesetzt mit einem <strong>Wemos D1 Mini (ESP8266)</strong>, der über <a href="https://esphome.io" target="_blank" class="text-blue-600 underline">ESPHome</a> als smarter Magnetschalter bei <strong>Alexa</strong> eingebunden ist. Statt einem echten Sensor kommt ein <strong>mechanischer Taster</strong> im Türrahmen zum Einsatz. </p><h2 class="text-2xl font-semibold mt-8 mb-4">Funktionsweise</h2><ul class="list-disc pl-6 space-y-2 mb-6"><li>Tür wird abgeschlossen → Taster schließt → Signal an den ESP</li><li>Eine LED-Leiste am Türrahmen zeigt an, dass das Bad besetzt ist</li><li>Der ESP meldet den Zustand an Alexa</li><li>Nach 5 Sekunden startet eine Alexa-Routine: <ul class="list-disc pl-6 mt-1"><li>RGB-Beleuchtung (Ledvance Bluetooth) schaltet in den Disco-Modus</li><li>Musik beginnt – z.B. „Careless Whisper“</li></ul></li><li>Wird die Tür wieder aufgeschlossen, schaltet alles sofort zurück</li></ul><p class="mb-6"> Ursprünglich war ein Infrarotsensor geplant, der die Nutzung direkt erkennen sollte – technisch jedoch zu unzuverlässig. Die gewählte Lösung mit einem simplen Taster funktioniert im Alltag deutlich robuster. </p><h2 class="text-2xl font-semibold mt-8 mb-4">Im Einsatz – nicht nur für Partys</h2><p class="mb-6"> Was für eine Hausparty entwickelt wurde, läuft heute dauerhaft im Alltag – zuverlässig und diskret. Die <strong>Aktivzeiten sind zwischen 17 und 0 Uhr</strong>, außerhalb bleibt alles im Normalzustand. </p><p class="mb-6"> Gäste sind oft überrascht, manchmal irritiert – aber fast immer begeistert. Die Kombination aus Licht, Musik und dem ungewöhnlichen Kontext sorgt für Gesprächsstoff. Über einen <strong>physischen Schalter</strong> am ESP lässt sich die Funktion bei Bedarf deaktivieren. </p><h2 class="text-2xl font-semibold mt-8 mb-4">Demo</h2><p class="mb-6"> Hier ein Demovideo: </p><br><video controls class="w-full rounded-xl shadow-md" poster="'+oe+'" style="height:75vh;"><source src="'+de+'" type="video/mp4"> Dein Browser unterstützt kein eingebettetes Video. </video><br><br>',16)]))}const he=p(ue,[["render",me]]),ge=""+new URL("Img2LCDScreenshot.SDyAxRM9.jpg",import.meta.url).href,ve={class:"prose max-w-3xl mx-auto p-4"},pe={__name:"eInkdisplay",setup(f){return(o,s)=>(l(),u("div",ve,s[0]||(s[0]=[_('<h1 class="text-3xl font-bold mb-2" data-v-84da38f9>Mobiles E-Ink-Display – Text &amp; Bild auf Knopfdruck</h1><p data-v-84da38f9> Dieses Projekt verbindet Low-Power-Technik mit kreativer Kommunikation: Ein kleines, mobiles <strong data-v-84da38f9>E-Ink-Display</strong>, das mit nur drei Tastern und einem ESP8266 spontane Unterhaltung liefert – ganz ohne WLAN, App oder Cloud. </p><p data-v-84da38f9> Was ursprünglich als Party-Gadget begann, hat sich zu einem charmanten, tragbaren Gesprächsstarter entwickelt. </p><h2 class="text-2xl font-semibold mt-6" data-v-84da38f9>Idee &amp; Hintergrund</h2><p data-v-84da38f9> Ursprünglich sollte das Display Gästen einer Hausparty zufällig ausgewählte <strong data-v-84da38f9>Sprüche oder Bilder</strong> zeigen – kleine Gesprächsanreize oder humorvolle Unterbrechungen. Technisch war das eine Herausforderung: Das über <em data-v-84da38f9>Aliexpress</em> bezogene 2.13&quot; <strong data-v-84da38f9>E-Ink-Display mit Schwarz-Weiß-Rot-Darstellung</strong> war preiswert, aber nur schlecht dokumentiert. Mit etwas Hartnäckigkeit, einem <strong data-v-84da38f9>Wemos D1 Mini</strong> und SPI-Verbindung konnte es dennoch erfolgreich angesteuert werden – auch ohne vorherige Erfahrung mit Displays. </p><p data-v-84da38f9> Ein besonders kurioser Teil des Prozesses: Nach einer längeren Konversation mit dem Händler (vermutlich maschinell übersetzt), erhielt ich eine mysteriöse ZIP-Datei. Diese enthielt nicht nur Beispielprogramme, sondern auch ein rudimentäres Tool, um <strong data-v-84da38f9>Bilddateien in C-Arrays</strong> zu konvertieren – was die Grundlage für die Bildanzeige auf dem ESP wurde. </p><h2 class="text-2xl font-semibold mt-6" data-v-84da38f9>⚙Aufbau &amp; Stromversorgung</h2><p data-v-84da38f9> Das Display wurde fest in eine passende <strong data-v-84da38f9>Plastikverpackung upgecycelt</strong> – zufällig die Originalverpackung des E-Ink-Moduls – und dort verlötet und verklebt. Ein alter <strong data-v-84da38f9>Smartphone-Akku (Galaxy S2)</strong> versorgt das System über einen <strong data-v-84da38f9>Step-Down-Spannungswandler</strong> mit Energie. Der Akku hält mehrere Stunden moderater Nutzung stand und kann bei Bedarf manuell nachgeladen werden. </p><h2 class="text-2xl font-semibold mt-6" data-v-84da38f9>Funktionen im Überblick</h2><ul class="list-disc ml-6" data-v-84da38f9><li data-v-84da38f9><strong data-v-84da38f9>Textanzeige:</strong> Rund 50 verschiedene „Conversation Starter“ sind lokal auf dem ESP hinterlegt. Sie wechseln automatisch alle 5 Minuten oder manuell über einen Taster. Die LED des Wemos leuchtet kurz zur Aufmerksamkeit. </li><li data-v-84da38f9><strong data-v-84da38f9>Bildanzeige:</strong> Über einen zweiten Taster werden rund 10 <em data-v-84da38f9>vorkonvertierte Meme-Bilder</em> durchgeschaltet. Ebenfalls automatische Aktualisierung alle 5 Minuten möglich. </li><li data-v-84da38f9><strong data-v-84da38f9>Pausenmodus:</strong> Ein dritter Taster deaktiviert die automatische Aktualisierung – für besonders gute Inhalte. </li></ul><h2 class="text-2xl font-semibold mt-6" data-v-84da38f9>Designprinzipien</h2><ul class="list-disc ml-6" data-v-84da38f9><li data-v-84da38f9><strong data-v-84da38f9>Lokal, stromsparend:</strong> Kein WLAN, kein Webinterface – aus Rücksicht auf Energieverbrauch.</li><li data-v-84da38f9><strong data-v-84da38f9>Modular und tragbar:</strong> Kompakt, wiederaufladbar und leicht zu transportieren.</li><li data-v-84da38f9><strong data-v-84da38f9>Open-Source-freundlich:</strong> Steuerung über selbst recherchierten Code und Tools.</li></ul><h2 class="text-2xl font-semibold mt-6" data-v-84da38f9>Ausblick</h2><p data-v-84da38f9> Eine mögliche Weiterentwicklung wäre ein global steuerbarer Text-/Bild-Upload – etwa über MQTT oder Webhook – mit entsprechender Konvertierung und Anzeige auf dem Display. Aufgrund der <strong data-v-84da38f9>begrenzten Akkuleistung</strong> und des manuellen Konvertierungsprozesses wäre das ein spannendes, aber anspruchsvolles Projekt. </p><h2 class="text-2xl font-semibold mt-6" data-v-84da38f9>Galerie &amp; Details</h2><br data-v-84da38f9><p data-v-84da38f9>Hier bspw. besagtes Programm zur Konvertierung von Bildern zu Arrays:</p><img src="'+ge+'" alt="img2lcd screenshot" data-v-84da38f9><br data-v-84da38f9><br data-v-84da38f9>',20)])))}},fe=p(pe,[["__scopeId","data-v-84da38f9"]]),be={class:"max-w-3xl mx-auto p-6 bg-white rounded-2xl shadow-md space-y-6"},ke={__name:"wifiguestbook",setup(f){return(o,s)=>(l(),u("section",be,s[0]||(s[0]=[_('<h2 class="text-3xl font-bold text-purple-800" data-v-4587e859>WiFi-Guestbook</h2><p class="text-gray-700" data-v-4587e859><strong data-v-4587e859>WiFi-Guestbook</strong> ist ein minimalistisches WLAN-Gästebuch, das für eine Hausparty entwickelt wurde. Ziel war es, Gäste, die sich gerade vom Geschehen entfernt hatten und am Handy nach „Free Wi-Fi“ suchten, spielerisch wieder einzubinden. Wer sich mit dem WLAN verband, wurde auf eine einfache HTML-Seite weitergeleitet und konnte dort einen Gästebucheintrag hinterlassen. </p><h3 class="text-xl font-semibold text-purple-700" data-v-4587e859>Technische Umsetzung</h3><ul class="list-disc list-inside text-gray-700 space-y-1" data-v-4587e859><li data-v-4587e859>Basis: <code data-v-4587e859>ESP8266</code> (Wemos D1 Mini) mit angepasstem <a href="https://github.com/adamff-dev/ESP8266-Captive-Portal" class="text-blue-600 underline" data-v-4587e859>Captive-Portal-Code</a></li><li data-v-4587e859>Kein DNS-Spoofing – einfache lokale Weiterleitung auf das Gästebuch</li><li data-v-4587e859>Speicherung der Einträge im Flash des ESP und Weiterleitung via Serial an einen <strong data-v-4587e859>Raspberry Pi</strong></li><li data-v-4587e859>Live-Visualisierung der Einträge auf einem Fernseher via HDMI-Ausgabe des Raspberry</li><li data-v-4587e859>Offenes WLAN ohne Authentifizierung</li></ul><h3 class="text-xl font-semibold text-purple-700" data-v-4587e859>Gestaltung</h3><p class="text-gray-700" data-v-4587e859> Die Gästebuchseite war im Stil des Originalprojekts gehalten – einfach, aber mit ASCII-Dekor und vollem Emoji-Support. Sie wurde alle paar Sekunden aktualisiert, sodass neue Einträge sofort auf dem Bildschirm erschienen. </p><h3 class="text-xl font-semibold text-purple-700" data-v-4587e859>Reaktionen</h3><p class="text-gray-700" data-v-4587e859> Die Gäste nahmen das System mit viel Humor an – es entstanden kreative, lustige und spontane Einträge. Zwar sind keine Screenshots erhalten geblieben, aber der Moment zählt: Der Bildschirm wurde zu einem stillen Nebendarsteller der Party. </p><h3 class="text-xl font-semibold text-purple-700" data-v-4587e859>Potenzial für Erweiterung</h3><ul class="list-disc list-inside text-gray-700 space-y-1" data-v-4587e859><li data-v-4587e859>Online-Upload der Einträge zur Archivierung oder Fernanzeige</li><li data-v-4587e859>Unterstützung für Bilder oder QR-Code-basierte Teilnahme</li><li data-v-4587e859>Gästebucheinträge als animierte Lauftexte, Reaktionen oder „Like“-Funktion</li></ul><br data-v-4587e859><br data-v-4587e859>',12)])))}},we=p(ke,[["__scopeId","data-v-4587e859"]]),xe=""+new URL("BewSysDipl.CQ-2TX56.jpg",import.meta.url).href,ye=""+new URL("BewSysSensor.BC37yKai.jpeg",import.meta.url).href,ze=""+new URL("BewSysProcess.CxxKi4JX.jpg",import.meta.url).href,_e=""+new URL("BewSysFull.DsT5HSGm.jpg",import.meta.url).href,Se={__name:"Bewsyst",setup(f){return(o,s)=>s[0]||(s[0]=_('<div class="p-6 max-w-3xl mx-auto bg-white rounded-2xl shadow-lg" data-v-ee1c7532><h1 class="text-3xl font-bold text-center text-gray-800 mb-6" data-v-ee1c7532> Bewertungssystem für eine Kunstgalerie </h1><p class="text-gray-700 mb-4" data-v-ee1c7532><strong data-v-ee1c7532>Interaktive Besucherrückmeldung mit Arduino Nano 33 BLE</strong></p><p class="text-gray-700 mb-6" data-v-ee1c7532> Für eine Freundin, die eine kleine Galerie leitete, entstand dieses Projekt als verspielte und gleichzeitig ernstzunehmende Form der Besucher*innenrückmeldung. Obwohl ursprünglich zur Auswertung gedacht, wurde das System von vielen als Kunstwerk wahrgenommen – zur Freude der Galeristin, die mich kurzerhand selbst als „ausstellenden Künstler“ bezeichnete. </p><h2 class="text-2xl font-semibold text-gray-800 mb-2" data-v-ee1c7532>Funktionsweise</h2><p class="text-gray-700 mb-4" data-v-ee1c7532> Das System basierte auf einem Arduino Nano 33 BLE, der fünf kapazitive TTP223-Touchsensoren steuerte. Diese waren mit runden Stickern versehen, die Smileys in Grün (5 Sterne), Gelb (3 Sterne) oder Rot (1 Stern) zeigten. Besucher*innen konnten durch Berührung eine Bewertung abgeben – mit finaler Gültigkeit (keine Korrektur). </p><p class="text-gray-700 mb-6" data-v-ee1c7532> Ein Ultraschallsensor erkannte, wenn sich eine Person näherte: eine kurze Melodie aus einem passiven Buzzer ertönte, um Aufmerksamkeit zu wecken. Nach der Bewertung drehte ein kleiner Servomotor eine verdeckte Karte um und präsentierten eine kurze, dankende Nachricht. </p><h2 class="text-2xl font-semibold text-gray-800 mb-2" data-v-ee1c7532>Zusätzliche Interaktionen</h2><ul class="list-disc list-inside text-gray-700 mb-6" data-v-ee1c7532><li data-v-ee1c7532>Anzeige der eigenen gewählten Bewertung</li><li data-v-ee1c7532>Gesamtanzahl aller Bewertungen</li><li data-v-ee1c7532>Visuelle Darstellung des Durchschnitts über einen Servo-Zeiger</li></ul><h2 class="text-2xl font-semibold text-gray-800 mb-2" data-v-ee1c7532>Aufbau &amp; Technik</h2><ul class="list-disc list-inside text-gray-700 mb-6" data-v-ee1c7532><li data-v-ee1c7532>Touchsensoren: 5 × TTP223</li><li data-v-ee1c7532>Anzeige &amp; Feedback: 1 × passiver Buzzer, 2 × 9g-Servos</li><li data-v-ee1c7532>Näherungserkennung: 1 × Ultraschallsensor</li><li data-v-ee1c7532>Stromversorgung: Netzteil</li><li data-v-ee1c7532>Montage: Wandinstallation mit klarer Benutzerführung</li></ul><h2 class="text-2xl font-semibold text-gray-800 mb-2" data-v-ee1c7532>Entwicklung &amp; Besonderheiten</h2><p class="text-gray-700 mb-6" data-v-ee1c7532> Während der Entwicklung in der Galerie stieß ich auf ein technisches Problem: Der Nano 33 BLE hatte Schwierigkeiten mit Interrupt-Pins – eine Eigenheit des Boards, die mir zunächst Rätsel aufgab. Durch einen zufälligen Austausch mit einem Maschinenbau-Dozenten, der sich für mein Projekt interessierte, konnten wir den Fehler identifizieren und das System stabil betreiben. </p><h2 class="text-2xl font-semibold text-gray-800 mb-2" data-v-ee1c7532>Wirkung</h2><p class="text-gray-700" data-v-ee1c7532> Das Projekt war mehrere Monate im Einsatz und wurde von den Besucher*innen durchweg positiv aufgenommen. Die Mischung aus Interaktivität, visueller Rückmeldung und Sound sorgte für viele Schmunzler und blieb in Erinnerung. </p><h2 class="text-2xl font-semibold mt-6" data-v-ee1c7532>Galerie &amp; Details</h2><p data-v-ee1c7532> Hier ein paar Bilder, während den Anfängen der Installation: </p><br data-v-ee1c7532></div><div data-v-ee1c7532><img src="'+xe+'" alt="Bewertungssystem Display" style="height:75vh;" data-v-ee1c7532><br data-v-ee1c7532><p data-v-ee1c7532>Hier sieht man die kapazitiven Touchsensoren</p><img src="'+ye+'" alt="Bewertungssystem Display" style="height:75vh;" data-v-ee1c7532><br data-v-ee1c7532><br data-v-ee1c7532><p data-v-ee1c7532>Hier kann man das ganze Projekt erkennen</p><img src="'+ze+'" alt="Bewertungssystem Prozess" style="height:75vh;" data-v-ee1c7532><img src="'+_e+'" alt="Bewertungssystem Voll" style="height:75vh;" data-v-ee1c7532><br data-v-ee1c7532><br data-v-ee1c7532><br data-v-ee1c7532></div>',2))}},Be=p(Se,[["__scopeId","data-v-ee1c7532"]]),De={id:"input-container"},Ee={id:"query"},Ae={key:0},Pe={class:"drag-header"},Te={class:"drag-inhalt",style:{height:"100%",width:"auto"}},Le={__name:"terminal",setup(f){const o=a("dark"),s=a(!1),j=a("Arduino Projekte"),i=a(""),b=a([]),c=a(0),d=q([{text:"Json.B Terminal"},{text:"Type HELP to see the full list of commands.",hasBuffer:!0}]),m=J(()=>o.value==="dark"?{terminal:{boxShadow:"0 2px 5px #111"},window:{backgroundColor:"#222345",color:"#F4F4F4",userSelect:"none"},field:{backgroundColor:"#222333",color:"#F4F4F4",fontWeight:"normal"},cursor:{animation:"1.02s blink-dark step-end infinite"}}:{terminal:{boxShadow:"0 2px 5px #33333375"},window:{backgroundColor:"#b84900",color:"#E3E3E3",userSelect:"none"},field:{backgroundColor:"#ffcba4",color:"#222333FF",fontWeight:"bold"},cursor:{animation:"1.02s blink-light step-end infinite"}}),h=a(null),S=a(!1);function M(){S.value=!0}function $(){s.value=!s.value,N(()=>{var n;(n=h.value)==null||n.focus()})}function V(n){const e=n.key,r=n.ctrlKey,T=n.altKey;![...Array.from({length:12},(Me,Q)=>`F${Q+1}`),"ContextMenu","Meta","NumLock","Shift","Control","Alt","CapsLock","Tab","ScrollLock","Pause","Insert","Home","PageUp","Delete","End","PageDown"].includes(e)&&!r&&!T&&(e==="Backspace"?i.value=i.value.slice(0,-1):e==="Escape"?i.value="":e==="ArrowUp"||e==="ArrowLeft"?c.value<b.value.length&&(c.value++,i.value=b.value[c.value-1]||""):e==="ArrowDown"||e==="ArrowRight"?c.value>0&&(c.value--,i.value=b.value[c.value-1]||""):e==="Enter"?i.value.trim().length?(b.value.unshift(i.value),c.value=0,d.push({text:i.value,isCommand:!0}),X(i.value.trim()),i.value=""):d.push({isCommand:!0}):i.value+=e)}const k=a(null);function X(n){const e=n.toLowerCase().trim();if(e==="help")d.push({text:["Available commands:","help - shows this help","clear - clears the terminal","theme - toggle theme","exit - close the terminal","run baddisco",' "  e_ink',' "  wifi_guestbook',' "  bew_system - opens a terminal window'].join(`
`),hasBuffer:!0});else if(e==="clear")d.splice(0,d.length);else if(e==="theme")o.value=o.value==="dark"?"light":"dark";else if(e==="exit")M();else if(e.startsWith("run ")){const r=e.split(" ")[1];["baddisco","e_ink","wifi_guestbook","bew_system"].includes(r)?(E.value=!0,k.value=r,d.push({text:`Opening ${r}...`,hasBuffer:!0})):d.push({text:`Unknown window: ${r}`,isError:!0,hasBuffer:!0})}else d.push({text:`Unknown command: ${n}`,isError:!0,hasBuffer:!0})}ee(d,()=>{N(()=>{h.value&&(h.value.scrollTop=h.value.scrollHeight)})}),te(()=>{h.value&&h.value.focus()});const w=a(!0),C=a(!1),B=a(100),D=a(100),x=a(!1),E=a(!0);let I,G,F,H;function O(){w.value=!w.value}function Z(){E.value=!1}function Y(n){x.value=!0,I=n.clientX,G=n.clientY,F=B.value,H=D.value,window.addEventListener("mousemove",A),window.addEventListener("mouseup",P)}function A(n){if(!x.value)return;const e=n.clientX-I,r=n.clientY-G;B.value=F+e,D.value=H+r}function P(){x.value=!1,window.removeEventListener("mousemove",A),window.removeEventListener("mouseup",P)}return ne(()=>{window.removeEventListener("mousemove",A),window.removeEventListener("mouseup",P)}),(n,e)=>(l(),u(K,null,[t("div",{style:g(m.value.app),id:"app"},[S.value?(l(),u("button",{key:0,onClick:e[0]||(e[0]=r=>S.value=!1),style:{all:"unset",height:"2vh",width:"auto",cursor:"pointer"}},e[2]||(e[2]=[t("img",{src:re,alt:"Terminal",style:{height:"10vh",width:"auto"}},null,-1)]))):(l(),u("div",{key:1,id:"terminal",style:g(s.value?{height:"100vh",width:"100vw",maxWidth:"100vw"}:m.value.terminal)},[t("div",{id:"window",style:g(m.value.window)},[t("span",{id:"title",style:g({color:m.value.window.color})},W(j.value),5),e[5]||(e[5]=t("button",{id:"useless-btn",class:"btn green"},[t("img",{class:"btn-icon",src:le,alt:"MinWindow Icon"})],-1)),t("button",{class:"btn yellow",onClick:$},e[3]||(e[3]=[t("img",{class:"btn-icon",src:R,alt:"MinWindow Icon"},null,-1)])),t("button",{class:"btn red",onClick:M},e[4]||(e[4]=[t("img",{class:"btn-icon",src:U,alt:"Xmark"},null,-1)]))],4),t("div",{id:"field",class:z(o.value),style:g(m.value.field),tabindex:"0",onKeydown:y(V,["prevent"]),ref_key:"field",ref:h},[(l(!0),u(K,null,ae(d,(r,T)=>(l(),u("div",{key:T,class:z({error:r.isError})},[t("pre",null,W(r.text),1)],2))),128)),t("div",De,[t("span",Ee,W(i.value),1),t("span",{id:"cursor",style:g(m.value.cursor)},null,4)])],38)],4))],4),k.value?(l(),u("span",Ae,[E.value?(l(),u("div",{key:0,class:z(["drag",{maximized:w.value,mined:C.value}]),style:g({...m.value.window,top:D.value+"px",left:B.value+"px",position:"absolute",cursor:x.value?"grabbing":"grab"}),onMousedown:Y},[t("div",Pe,[t("button",{class:"btn green",onClick:y(O,["stop"])},e[6]||(e[6]=[t("img",{class:"btn-icon",src:R,alt:"MinWindow Icon"},null,-1)])),t("button",{class:"btn red",onClick:y(Z,["stop"])},e[7]||(e[7]=[t("img",{class:"btn-icon",src:U,alt:"Xmark"},null,-1)]))]),t("div",Te,[t("div",{class:z({maximized:w.value,minedtext:C.value}),onContextmenu:e[1]||(e[1]=y(()=>{},["prevent"]))},[k.value?(l(),se(ie({baddisco:he,e_ink:fe,wifi_guestbook:we,bew_system:Be}[k.value]),{key:0})):L("",!0)],34)])],38)):L("",!0)])):L("",!0)],64))}},Ie=p(Le,[["__scopeId","data-v-f73f69a7"]]);export{Ie as default};
